/**
 * Generated by ROHD - www.github.com/intel/rohd
 * Generation time: 2022-12-26 23:36:19.817433
 * ROHD Version: 0.4.1
 */

module FirFilter(
input logic en,
input logic [7:0] inputVal,
input logic resetB,
input logic clk,
output logic [7:0] out
);
logic [7:0] z0;
logic [7:0] z1;
logic [7:0] z2;
logic [7:0] z3;
//  sequential
always_ff @(posedge clk) begin
  if(resetB) begin
      if(en) begin
          z0 <= inputVal;
          z1 <= z0;
          z2 <= z1;
          z3 <= z2;
          out <= ((((z0 * 8'h0) + (z1 * 8'h0)) + (z2 * 8'h0)) + (z3 * 8'h1));
      end else begin
          out <= 8'h0;
      end 

  end else begin
      out <= 8'h0;
      z0 <= 8'h0;
      z1 <= 8'h0;
      z2 <= 8'h0;
      z3 <= 8'h0;
  end 

end

endmodule : FirFilter